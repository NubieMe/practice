name: CI/CD to EC2 via ECR

on:
  push:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names fiber-backend --region ap-southeast-2 || \
          aws ecr create-repository --repository-name fiber-backend --region ap-southeast-2

      - name: Build and push Docker image to ECR
        env:
          ECR_REPOSITORY: fiber-backend
        run: |
          IMAGE_TAG=latest
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            cd ~/app || mkdir ~/app && cd ~/app
            echo '
            version: "3.8"
            services:
              fiber-app:
                image: ${{ steps.login-ecr.outputs.registry }}/fiber-backend:latest
                ports:
                  - "3000:3000"
                restart: always
            ' > docker-compose.yml
            docker-compose pull
            docker-compose up -d
